language: python
sudo: false
python:
- '2.7'
install:
- if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then wget http://repo.continuum.io/miniconda/Miniconda-3.7.0-Linux-x86_64.sh
  -O miniconda.sh; else wget http://repo.continuum.io/miniconda/Miniconda3-3.7.0-Linux-x86_64.sh
  -O miniconda.sh; fi
- bash miniconda.sh -b -p $HOME/miniconda
- export PATH="$HOME/miniconda/bin:$PATH"
- hash -r
- conda config --set always_yes yes --set changeps1 no
- conda update -q conda
- conda info -a
- |
  conda create -q -n test-environment python=$TRAVIS_PYTHON_VERSION cytoolz numpy pandas pip pytables pyyaml=3.13 toolz psutil
- source activate test-environment
- pip install orca openmatrix zbox
- pip install pytest pytest-cov coveralls pycodestyle pytest-xdist
- pip install sphinx numpydoc
- pip install activitysim==0.5.1
- pip install .
script:
- pycodestyle rFirm
#- py.test --cov rFirm --cov-report term-missing
after_success:
- coveralls
- bin/build_docs.sh
notifications:
  slack:
    secure: HjHpcCU6WzHLzlieBhwkuWdt9Gj35xYRE89F9xczYqmGj1se/g7x6VcCPx8dYGYh1/GwSEjkQdilspDpxmtDVH4WjUialM10vh/q9kfvemXtMzXtFhajfBSlY/RQgjupD2JHoDvtlirlVzBWhEHMrkTe85Xk4iec6NG4qR9BJmEOgtdGMskPfJQHjkVqFYoECKMQCJf6rFNCDUWTHeCQ4fI/uDPKSj9lL79WZFNnk4taMXSCI6MtTSpzP7/Laa24m1Q+UeB95gSTGl7Z+6BnBJySuL9Jl47ltx/sxHkOdj3i/VHWOHSCq6V2QBDzHB1rJD892+Z/NqnWc7uwMtO3R/o9qc56YZRewD+zKHTgcdmgmMqREMqXdd3O+UGkCJ6dXny+pYtFqWRQqdLPxeTpdyFKaZC+3GXNxM+tlAqcFCSQG96LnG18ZI7vyEaTN/qQ1OE3V/vxGoHtB2zSJpTbfj8dUSEVoscNL3MzSDM2dJvzOmptImXXyvjb3IvOyaN9xHBNMnbltVaSgHyxL9r8M4pe3a8Rf9TBV/hOLWSn3sHjcEGj8AKdlEiTFjNCEIvTmK/u9YHPQEFMfnJ/MM0Fae5ewPeMTwy9BqDv3lwH+jdbGm3dZqIA7ryPkcRnZnYmpRIKUph5gJF2Svh2Pz4ihhUXz93H5+8yrf4x2fjjvRA=
env:
  global:
    # GH_TOKEN - encrypted toliwaga personal access token with public_repo permission
    secure: EXsp9hqZm65BZ6O9SaVJDmheWHdmbVtAU/sgEY4dC7Sg6/6orBoAuMosJTAIjI1KQZbe4tnPkQJwatPVAqmzY9D67NMDBzw/Y6PHg5CtYL2DYZBAxLO2CQgyX8+DMyNXEjD9/AoiTak7JNjtrsgLoBTO4kSHwtITwOlZezPU1r0LX2j2OyqARI9wK8122o/Sv1FzC7w7yav9ryUUInK/gLUzfjHXAG79OxURUXAWXxzDseATBQXPhDFB0xF2YqSaiTDoV/32jMuKHzz4nvxg2HOCT6MAHekMCtCmiKWwEKvyMTzH7tl9+TeJKg0SeArR2Bsc+ZOHGAg44NwH47+W0F4OsF/QkFVadyU+wtIZYWVgjRhKkI/TNkDY2B+irFPGhkCrB/8n0xVy970C1OWtvWLMd+3XbvUjVzMY7/zzg58F9u4eo8/hvmh6AnmYmE8eWHDJiGAIv1j1T55NCYQ6NYYOC+qV8T62nPx8rUnOeb1RQ5C/czN4yvbi9YjLFK+mNNLY+l+YJrZrdnfai1QsU9wwFWEPF4DrOm33VIw/ZCcJGqWMOqhyHk9oR6rSqBSnxDa4YceOmGbVHK74mi4bsQpvTR5wT4YGees2/YIxBXpEjmGvzaST2nXgdjMCaj2xxwqcmo4sfCUSb8rm4uHxNrghXqTD3HtbZIocSbkPoZM=
